
## Testing import statement
import lang
import lang, path
import lang as o, path as p
from lang import write
from lang import clock as c

from lang import *
from path import *

import "basics.atml" ## will import all
import "controlflow.atml" as if_test
from "functions.atml" import fn1, fn2 as f2, fn3

import "class.atml" as class_
assert(class_.Vec(42, 3.14).y == 3.14)
(vec = class_._Vec()).x = 'a'; assert(vec.x == 'a')

## If it has a module name it'll bind to that name.
import 'import/module.atml'
assert(module_name.get_module_name() == 'module_name')

## Import everything from the module.
from 'import/module.atml' import *
assert(module_name.get_module_name == get_module_name)

## script without module name will import all by default.
import 'import/all_import.atml'
assert(all_f1() == 'f1')
assert(all_f2() == 'f2')
assert(all_f3() == 'f3')

## Import the script and bound it with a given name.
import 'import/all_import.atml' as all_import
assert(all_import.all_f1 == all_f1)

## Test if the imported globals were initialized
import 'import/globals.atml'
assert(g_import != null)
assert(g_import.g_var_1 == 3)
assert(g_import.g_var_2 == g_import.get_a_value())

import 'import/globals2.atml'
assert(g_val_1 == 100)
assert(g_val_2 == get_a_value())

# If we got here, that means all test were passed.
print('All TESTS PASSED')
